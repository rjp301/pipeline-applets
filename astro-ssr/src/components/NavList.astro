---
interface Item {
  href: string;
  name: string;
  details?: string;
}

interface Props {
  items: Item[];
  home?: Item;
  header?: string;
}

const { home, items, header } = Astro.props;

import { Button } from "@/components/ui/button";
import { CardTitle } from "@/components/ui/card";

const isActive = (href: string) =>
  href.slice(0, href.indexOf("?")) === Astro.url.pathname;
---

<nav class="p-2 grid gap-2 w-72">
  {
    home && (
      <a href={home.href}>
        <Button className="w-full">
          <i class="fa-solid fa-plus mr-2" /> {home.name}
        </Button>
      </a>
    )
  }
  {header && <CardTitle>{header}</CardTitle>}
  <div class="grid gap-1">
    {
      items.map((item) => (
        <a href={item.href}>
          <Button
            variant={isActive(item.href) ? "secondary" : "ghost"}
            className={`w-full justify-start ${item.details ? 'h-12' : ''}`}
          >
            <i class="fa-solid fa-arrow-right mr-4" />
            {item.details ? (
              <div class="text-left">
                <div>{item.name}</div>
                <div class="text-xs font-normal text-muted-foreground">
                  {item.details}
                </div>
              </div>
            ) : (
              item.name
            )}
          </Button>
        </a>
      ))
    }
  </div>
</nav>
